Команды git.

Примечания по использованию справки:

1) В скобках <...> указано, что необходимо прописать (сами скобки НЕ пишем)


Команды для указания путей к папке:

1. cd <путь файла>                               (Перейти в нужную папку)
2. ls                                            (Посмотреть находящиеся файлы и папки по данному пути)


Инициализация проекта:

1. git config --global user.name "Your name"     (Указать свое имя пользователя)
2. git config --global user.email "Your email"   (Указать свою электронную почту)
3. cat ~/.gitconfig                              (Посмотреть добавленую выше информацию в файл gitconfig)
4. git init                                      (Инициализация проекта в папке)


Работа с файлами:

1. git status                                    (Проверить статус файлов)
2. git add <имя файла>                           (Добавить конкретный файл в список отслеживания)
3. git add .                                     (Добавить все файлы, находящиеся в папке, в список отслеживания)
4. git commit -m"Ваше сообщение"                 (Сохранить добавленные файлы в отслеживаемые и описать внесенные изменения)
5. git show <хэш>                                (Перейти к конкретному коммиту и посмотреть изменения)


Просмотр истории коммитов:

1. git log                                       (Посмотреть все сделанные коммиты в текущем проекте)
2. git log -1                                    (Посмотреть последний коммит)
3. git log --oneline                             (Посмотреть историю коммитов в кратком варианте)
4. git log --oneline --all                       (Посмотреть историю коммитов всех веток)
5. git log --oneline --all -graph                (Посмотреть историю коммитов всех веток с ответвлениями)
6. q                                             (Выйти из git log)


Удаление/Изменение файла:

1. git checkout <путь/имя файла>                 (Если мы удилили/изменили файл, и НЕ успели его закоммитить, то можно его восстановить данной командой)
2. git checkout <хэш>                            (Полностью вернуть все файлы до состоянния в указанном коммите)
3. git checkout <хэш> <имя файла>                (Когда мы хотим откатить определенный файл до состояния в другом коммите (при этом, он уже будет в отслеживаемых))
4. git diff --staged <имя файла>                 (Посмотреть последние изменения конкретного файла)
5. git reset HEAD <путь\имя файла>               (Убрать конкретный файл из отслеживаемых)


Работа со своими коммитами:

1. git commit --amend -m "измененный коммит"     (Поменять сообщение последнего коммита)
2. git rm <путь\имя файла>                       (Убрать файл из последнего коммита (он останется в отслеживаемых), при этом остальные файлы в этом коммите, останутся)
3. git commit --amend --no-edit                  (Убранный файл из последнего коммита, удаляем из отслеживаемых и оставляем все остальные файлы с тем же тектом коммита)
4. git rm --cached <имя файла>                   (Убрать файл из коммита, но оставить его в дереве документа(останется в индексе), чтобы продолжить работу над ним)


Работа с ветками:

1. git checkout <хэш> -b <имя ветки>             (Перейти к определенному коммиту и создать новую ветку)
2. git checkout <имя ветки>                      (Перейти в конкретную ветку)
3. git checkout -b <имя ветки>                   (Создать новую ветку после последнего коммита)